
`include "LENET.vh"
module udp2cnn(
    /*---INPUT---*/
    clk_i,
    rst_i,
    UDP_st_i,
    els_packet,
    data_i,
    /*---OUTPUT---*/
    cnn_cmp_o,
    DstMAC_o,
    DstIP_o,
    SrcPort_o,
    DstPort_o,
    LED_o,
    PMOD_B_o,
    PMOD_C_o,
//    OFULL1_RESULT,
//    OPOOL2_RESULT,
    OLENET_RESULT,
    SW
);

    /*---I/O Declare---*/
    input       clk_i;
    input       rst_i;
    input       UDP_st_i;
    input       els_packet;
    input [8:0] data_i;

    output          cnn_cmp_o;
    output [4:0]     LED_o;
    output [7:0]     PMOD_B_o;
    output [7:0]     PMOD_C_o;
    output [47:0]   DstMAC_o;
    output [31:0]   DstIP_o;
    output [15:0]   SrcPort_o;
    output [15:0]   DstPort_o;
//    output signed [63:0] OFULL1_RESULT [0:9];
//    output signed [63:0] OPOOL2_RESULT [0:9];
    output signed [63:0] OLENET_RESULT [0:9];
    input  [3:0]    SW;

    /*---parameter---*/
    parameter   IDLE        =   4'h0;
    parameter   PRESV       =   4'h1;
    parameter   STBY        =   4'h2;
    parameter   SEND2CNN    =   4'h3;
    parameter   CNNEND      =   4'h4;

    parameter   px_size     =   6'd32;

    /*---wire/reg---*/
    reg [7:0]   RXBUF [1485:0];

    //wire [0:1023] IMG  = {1024'b};//su
    //wire [0:1023] IMG = {1024'b};//wo
    //wire [0:1023] IMG ={1024'b};//tu
    //wire [0:1023] IMG ={1024'b};//re
    //wire [0:1023] IMG ={1024'b};//tu
    //wire [0:1023] IMG ={1024'b};//tu
    //wire [0:1023] IMG ={1024'b0000000000000000000000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000111000000000000000000000000000001110000000000000000000000000000111000000000000000000000000000001110000000000000000000000000000111100000000000000000000000000001110000000000000000000000000000111100000001110000000000000000001110000000111100000000000000000011100000011111100000000000000001111000001100111000000000000000011110000110001110000000000000000111000011001011100000000000000001110001100000111000000000000000011100110000001110000000000000001111111000000111000000000000000011111100000001110000000000000001111110000000001100000000000000011111000000000011000000000000001111100000000000111000000000000111111000000000001110000000000001111110000000000011100000000000111111100000000000011000000000111111111000000000000111100000001111001110000000000000011110000001000011110000000000000000000000000000111000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000};//re
    //wire [0:1023] IMG ={1024'b};//tu
    //wire [0:1023] IMG ={1024'b};//su
    //wire [0:1023] IMG ={1024'b};//ha
    //wire [0:1023] IMG ={1024'b};//ma
    //wire [0:1023] IMG  = {1024'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111};
    //wire [0:1023] IMG  = {1024'b};

    reg [10:0]  rx_cnt;
    reg [3:0]   st;
    reg [3:0]   nx;
    reg [4:0]   px_cnt_x;
    reg [4:0]   px_cnt_y;
    //reg [7:0]   px_data [0:24];
    reg px_data [0:24];
    reg [47:0]  DstMAC;
    reg [31:0]  DstIP;
    reg [15:0]  SrcPort;
    reg [15:0]  DstPort;
    reg         cnn_cmp;
    reg         network_en;

    wire        UDP_st = UDP_st_i;
    //wire        cnn_st;
    wire        lenet_cmp;
//    wire        OPOOL2_END;
//    wire        OFULL1_CMP;
    wire        flame_end = (px_cnt_y==px_size-5)&&(px_cnt_x==px_size-5);
//    wire        cnnend = OPOOL2_END | OFULL1_CMP | lenet_cmp;
//    wire        cnnend = OFULL1_CMP | lenet_cmp;
    wire        cnnend = lenet_cmp;
    //wire        send_start = cnn_st;
    wire signed [63:0] LENET_RESULT [0:9];

    always_ff @(posedge clk_i)begin
        if(rst_i)   st <= IDLE;
        else        st <= nx;
    end

    always_comb begin
        nx = st;
        case (st)
            IDLE : begin
                if(data_i == {`HI,`SFD}) nx = PRESV;
            end
            PRESV : begin
                if(UDP_st) nx = STBY;
                else if(els_packet) nx = IDLE;
            end
            STBY : begin
                if(cnnend) nx = CNNEND;
                //else if(send_start) nx = SEND2CNN;
                // else if(1)    nx = SEND2CNN;
            end
//            SEND2CNN : begin
//                if(flame_end) nx = STBY;
//            end
            CNNEND : begin
                nx = IDLE;
            end
        endcase
    end

    /*---??�[�^��??---*/
    always_ff @(posedge clk_i)begin
        if(st==PRESV && data_i[8])  rx_cnt <= rx_cnt + 11'b1;
        else if(st==IDLE)           rx_cnt <= 11'b0;
    end

    always_ff @(posedge clk_i)begin
        if(st==PRESV) RXBUF[rx_cnt] <= data_i[7:0];
    end

    /*---���M�p??�[�^���o??---*/
    always_ff @(posedge clk_i)begin
        if (UDP_st) begin
            DstMAC  <= {RXBUF[6],RXBUF[7],RXBUF[8],RXBUF[9],RXBUF[10],RXBUF[11]};
            DstIP   <= {RXBUF[26],RXBUF[27],RXBUF[28],RXBUF[29]};
        end
    end
    always_ff @(posedge clk_i)begin
        if(UDP_st)begin
            SrcPort <= {RXBUF[34],RXBUF[35]};
            DstPort <= {RXBUF[36],RXBUF[37]};
        end
    end
    assign DstMAC_o = DstMAC;
    assign DstIP_o  = DstIP;
    assign SrcPort_o = SrcPort;
    assign DstPort_o = DstPort;

    /*---CNN�ւ�??�[�^---*/
//    always_ff @(posedge clk_i)begin
//        if(st==SEND2CNN) begin
//            if(px_cnt_x==px_size-5) px_cnt_x <= 5'b0;
//            else                    px_cnt_x <= px_cnt_x + 5'b1;
//        end
//        else                        px_cnt_x <= 5'b0;
//    end
    
//    always_ff @(posedge clk_i)begin
//        if(st==SEND2CNN) begin
//            if(px_cnt_x==px_size-5) px_cnt_y <= px_cnt_y + 5'b1;
//        end
//        else                        px_cnt_y <= 5'b0;
//    end

//    always_ff @(posedge clk_i)begin
//        if(st==STBY&&send_start)    network_en <= `HI;
//        else if(st==SEND2CNN)begin
//            if(flame_end)           network_en <= `LO;
//            else                    network_en <= `HI;
//        end
//        else                        network_en <= `LO;
//    end
//    // ??�[�^??5x5�����o��???1�s���Ƃɑ��
//    // �����?????�[�^??255or0���Ŕ��ʂ���5bit��??�[�^�Ɉ��k
//    // ����ɂ�����Ȃ���25bit��??�[�^�ɂ��ďo??
//    wire [10:0] imgpx = px_cnt_x + (px_cnt_y<<5);
//    wire [10:0] px = px_cnt_x + (px_cnt_y<<5) + 42;

//    always_ff @(posedge clk_i)begin
//        //-- 1st line
//        px_data[0] <= RXBUF[px];
//        px_data[1] <= RXBUF[px + 1];
//        px_data[2] <= RXBUF[px + 2];
//        px_data[3] <= RXBUF[px + 3];
//        px_data[4] <= RXBUF[px + 4];
//        //-- 2nd line
//        px_data[5] <= RXBUF[px + 32];
//        px_data[6] <= RXBUF[px + 33];
//        px_data[7] <= RXBUF[px + 34];
//        px_data[8] <= RXBUF[px + 35];
//        px_data[9] <= RXBUF[px + 36];
//        //-- 3rd line
//        px_data[10] <= RXBUF[px + 64];
//        px_data[11] <= RXBUF[px + 65];
//        px_data[12] <= RXBUF[px + 66];
//        px_data[13] <= RXBUF[px + 67];
//        px_data[14] <= RXBUF[px + 68];
//        //-- 4th line
//        px_data[15] <= RXBUF[px + 96];
//        px_data[16] <= RXBUF[px + 97];
//        px_data[17] <= RXBUF[px + 98];
//        px_data[18] <= RXBUF[px + 99];
//        px_data[19] <= RXBUF[px + 100];
//        //-- 5th line
//        px_data[20] <= RXBUF[px + 128];
//        px_data[21] <= RXBUF[px + 129];
//        px_data[22] <= RXBUF[px + 130];
//        px_data[23] <= RXBUF[px + 131];
//        px_data[24] <= RXBUF[px + 132];
//    end
    
//    reg px_data_valid;
//    reg [4:0] px_data_x, px_data_y;
//    always_ff @ (posedge clk_i) begin
//       if (rst_i) px_data_valid <= 1'b0;
//       else if (st==SEND2CNN) begin
//          if (px_cnt_x==5'd0 && px_cnt_y==5'd0) begin
//             px_data_valid <= 1'b1; //-- Assert
//          end
//       end
//       else px_data_valid <= 1'b0;
//    end
 
//    always @ (posedge clk_i) begin
//       if(rst_i) begin
//          px_data_x <= 5'h1F;
//          px_data_y <= 5'h1F;
//       end
//       else if (st==SEND2CNN) begin
//          px_data_x <= px_cnt_x;
//          px_data_y <= px_cnt_y;
//       end
//       else begin
//          px_data_x <= 5'h1F;
//          px_data_y <= 5'h1F;
//       end
//    end

    reg d_cnn_cmp;

    always_ff @(posedge clk_i)begin
        if(st==CNNEND)  d_cnn_cmp <= `HI;
        else            d_cnn_cmp <= `LO;
    end
    
    always_ff @(posedge clk_i)begin
        cnn_cmp <= d_cnn_cmp;
    end
    
    assign cnn_cmp_o = cnn_cmp;
    
        
    parameter IMG_OFFSET = 34; //RXBUF[42] ~ [1065]?
    
    wire [1023:0] i_img ;
    reg [1023:0] i_buf;
    
    integer i;
    
    always_ff @(posedge clk_i) begin
        if(UDP_st) begin
            for(i=0; i<1024; i=i+1)  begin
                i_buf[i] <= RXBUF[i+IMG_OFFSET+8];
            end
        end
    end
    
    assign i_img = i_buf;
    
//    `ifdef lenet_dummy
    
//    always_ff @(posedge clk_i) begin
//        if(UDP_st) begin
//            lenet_cmp <= 1;
//        end
//    end
    
//    `else 
    LENET LENET(
        /*---INPUT---*/
        .ICLK           (clk_i),
        .IRST           (rst_i),
        .IIMG            (i_img),
        .LENET_INIT     (0),
        .LENET_START    (UDP_st),
        /*---OUTPUT---*/
       // .FLAME_END     (flame_end),
        .LED_o      (LED_o),
        .PMOD_B_o(PMOD_B_o),
        .PMOD_C_o(PMOD_C_o),
        //.CONV1_START      (cnn_st),
        .LENET_CMP      (lenet_cmp),
        .LENET_RESULT   (LENET_RESULT),
        .SW             (SW)
//        .OPOOL2_RESULT  (OPOOL2_RESULT),
//        .OFULL1_RESULT  (OFULL1_RESULT),
//        .OPOOL2_END     (OPOOL2_END),
//        .OFULL1_CMP     (OFULL1_CMP)
    );
    
    //`endif
    
    assign OLENET_RESULT = LENET_RESULT;

    
    /* ------ simulation ------- */
    `ifdef SIM_FLAG
    
//    real r_IPIX_CONV, r_ORELU ,exp_ORELU;
        
//    always_comb begin
//        assign r_IPIX_CONV = $itor(IPIX_CONV) / 64.0;
//        assign r_ORELU     = $itor(ORELU)    / 64.0;
//        assign exp_ORELU   = (IPIX_CONV[31]) ?  0 :  $itor(IPIX_CONV)/64.0;
//    end    
    
    `endif


endmodule